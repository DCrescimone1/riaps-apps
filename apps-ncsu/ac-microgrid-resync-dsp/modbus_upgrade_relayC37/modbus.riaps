// RIAPS Modbus (UART) Device Testing

app RIAPSModbusUART {
    message ModbusCommand;     // send Modbus action Request 
    message ModbusResponse;    // get response from Modbus action  
    message ModbusData;        // information for the logger to grab
    message NodeData;
    
    message C37Data;   		  // tuple: raw frame (bytes), dictionary of interpreted values
    message C37Header;		  // tuple: raw frame (bytes), string
    message C37Config;		  // tuple: raw frame (bytes), dictionary of interpreted values
    message PhasorData;
    
    message RelayC37Data;   		  // tuple: raw frame (bytes), dictionary of interpreted values
    message RelayC37Header;		  // tuple: raw frame (bytes), string
    message RelayC37Config;		  // tuple: raw frame (bytes), dictionary of interpreted values
    message RelayPhasorData;
    
    library pypmu;
    library serialModbusLib;
    
    // C37 device for OPAL
    device C37Receiver1P13A2D(pmu_ip='192.168.10.101', pmu_port=7200) {
      inside data_queue; 			// Inside port for forwarding messages coming from an internal thread.
      inside config_queue;
      inside header_queue;

      timer clock 2000;             // life signal
      pub c37data : C37Data;		// Publish port for received C37 data messages
      pub c37header : C37Header;	// Publish port for received C37 header messages
      pub c37config : C37Config;	// Publish port for received C37 config messages
    }
    
    // C37 device for relay
    device RelayC37Receiver6P5A1D(pmu_ip='192.168.10.31', pmu_port=9877) {
      inside data_queue; 			// Inside port for forwarding messages coming from an internal thread.
      inside config_queue;
      inside header_queue;

      timer clock 2000;             // life signal
      pub relayc37data : RelayC37Data;		// Publish port for received C37 data messages
      pub relayc37header : RelayC37Header;	// Publish port for received C37 header messages
      pub relayc37config : RelayC37Config;	// Publish port for received C37 config messages
    }
    
    
    component Processor() {
      sub rx_c37data : C37Data;
      sub rx_c37header : C37Header;
      sub rx_c37config : C37Config;
	  pub tx_phasorData: PhasorData;
    }
    
    component RelayProcessor() {
      sub relay_c37data : RelayC37Data;
      sub relay_c37header : RelayC37Header;
      sub relay_c37config : RelayC37Config;
	  pub relay_phasorData: RelayPhasorData;
    }
 
	// Modbus (UART) device interface - UART1
	//     considered the server for the request/response interaction
    device ModbusUartReqRepDevice(slaveaddress=10,port='UART1',baudrate=115200,serialTimeout=1.0) {      
      rep modbusRepPort : (ModbusCommand,ModbusResponse);	
      timer clock 1000;             //life signal
    }
    
    // Example Component to show Modbus I/F usage
    component ComputationalComponent(Ts = 0.1, ip = 111) {
      timer clock 100;  
      sub nodeReady : NodeData;
      sub relay_rx_phasorData: RelayPhasorData;
      sub rx_phasorData: PhasorData;
      pub thisReady : NodeData;
      pub tx_modbusData : ModbusData ;  	     // When data is ready, 
      req modbusReqPort : (ModbusCommand,ModbusResponse); // Port used to communicate with the ModbusUartDevice
    }

	component Logger(db_host='192.168.0.102', db_port=8086, db_name='ModbusIO', db_user='riaps', db_password='riaps') {
	  sub rx_modbusData : PhasorData;	
	}
    
    actor OpalIOActor() {
       local C37Data, C37Header, C37Config;
       {
       	  c37receiver : C37Receiver1P13A2D(pmu_ip='192.168.10.101', pmu_port=7200);
          processor : Processor();
       }
    }
    
    actor RelayC37Actor() {
       local RelayC37Data, RelayC37Header, RelayC37Config;
       {
       	  relayC37receiver : RelayC37Receiver6P5A1D(pmu_ip='192.168.10.31', pmu_port=9877);
          relayprocessor : RelayProcessor();
       }
    }
    
    // Modbus Communication Example actor
    actor ModbusExampleActor(TsArg, ipArg) {
    	local ModbusCommand,ModbusResponse;	// Local message types
      	{
     		modbus : ModbusUartReqRepDevice(slaveaddress=10,port='UART1',baudrate=115200,serialTimeout=3);  // Slave Address is in decimal
          	commInitiator : ComputationalComponent( Ts = TsArg, ip = ipArg ); 		
       	}
    }
    
    actor ModbusLogger(){
       	{
		 	logger : Logger(db_host='192.168.10.122', db_port=8086, db_name='Resync', db_user='riaps', db_password='riaps');
		}
    }
}
