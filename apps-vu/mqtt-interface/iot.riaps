
struct MQTTPayload {
	desc: String;
    measurement: Double;
}

message MQTTSent: MQTTPayload;
message MQTTReceived: MQTTPayload;

// Note:  Data Types Allowed:  Int8, UInt8, Int16, UInt16, Int32, UInt32, Int64, UInt64, Boolean, 
//                             String, Float, Double, Char, ByteBuffer
device MQTT(host="iot.eclipse.org", port=1883, qos=0, topic="riaps/test") {
    //uses {
    //	library mqtt;
    //}
    
    // Define messaging ports
    pub incoming : MQTTReceived;
    sub outgoing : MQTTSent;
    inside _incoming;
    timer clock 1000;
}


app IOT {
    component Publisher { 
      timer sampling 2000 ms;
      pub outgoing : MQTTSent; 
    }

    component Subscriber {
      sub incoming : MQTTReceived;
    }

    actor IOTActor {
       local MQTTSent, MQTTReceived;
       {  
          publisher : Publisher;
          subscriber: Subscriber;
          device mqtt : MQTT(host="iot.eclipse.org", port=1883, qos=0, topic="riaps/test")			
       }
    }
}
