// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: distributedestimator.capnp

#include "distributedestimator.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<34> b_a9d6d1e944112c72 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    114,  44,  17,  68, 233, 209, 214, 169,
     27,   0,   0,   0,   1,   0,   0,   0,
    219,  40, 193, 136, 178,  39,  38, 138,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 116, 114, 105,  98, 117,
    116, 101, 100, 101, 115, 116, 105, 109,
     97, 116, 111, 114,  46,  99,  97, 112,
    110, 112,  58,  69, 115, 116, 105, 109,
     97, 116, 101,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    109, 115, 103,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a9d6d1e944112c72 = b_a9d6d1e944112c72.words;
#if !CAPNP_LITE
static const uint16_t m_a9d6d1e944112c72[] = {0};
static const uint16_t i_a9d6d1e944112c72[] = {0};
const ::capnp::_::RawSchema s_a9d6d1e944112c72 = {
  0xa9d6d1e944112c72, b_a9d6d1e944112c72.words, 34, nullptr, m_a9d6d1e944112c72,
  0, 1, i_a9d6d1e944112c72, nullptr, nullptr, { &s_a9d6d1e944112c72, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_91dc728422abc2e4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    228, 194, 171,  34, 132, 114, 220, 145,
     27,   0,   0,   0,   1,   0,   0,   0,
    219,  40, 193, 136, 178,  39,  38, 138,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 116, 114, 105,  98, 117,
    116, 101, 100, 101, 115, 116, 105, 109,
     97, 116, 111, 114,  46,  99,  97, 112,
    110, 112,  58,  83, 101, 110, 115, 111,
    114,  86,  97, 108, 117, 101,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    109, 115, 103,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_91dc728422abc2e4 = b_91dc728422abc2e4.words;
#if !CAPNP_LITE
static const uint16_t m_91dc728422abc2e4[] = {0};
static const uint16_t i_91dc728422abc2e4[] = {0};
const ::capnp::_::RawSchema s_91dc728422abc2e4 = {
  0x91dc728422abc2e4, b_91dc728422abc2e4.words, 34, nullptr, m_91dc728422abc2e4,
  0, 1, i_91dc728422abc2e4, nullptr, nullptr, { &s_91dc728422abc2e4, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_f1f2010d468fd989 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    137, 217, 143,  70,  13,   1, 242, 241,
     27,   0,   0,   0,   1,   0,   0,   0,
    219,  40, 193, 136, 178,  39,  38, 138,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 116, 114, 105,  98, 117,
    116, 101, 100, 101, 115, 116, 105, 109,
     97, 116, 111, 114,  46,  99,  97, 112,
    110, 112,  58,  83, 101, 110, 115, 111,
    114,  82, 101,  97, 100, 121,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    109, 115, 103,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f1f2010d468fd989 = b_f1f2010d468fd989.words;
#if !CAPNP_LITE
static const uint16_t m_f1f2010d468fd989[] = {0};
static const uint16_t i_f1f2010d468fd989[] = {0};
const ::capnp::_::RawSchema s_f1f2010d468fd989 = {
  0xf1f2010d468fd989, b_f1f2010d468fd989.words, 34, nullptr, m_f1f2010d468fd989,
  0, 1, i_f1f2010d468fd989, nullptr, nullptr, { &s_f1f2010d468fd989, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_95f964b901abb23e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     62, 178, 171,   1, 185, 100, 249, 149,
     27,   0,   0,   0,   1,   0,   0,   0,
    219,  40, 193, 136, 178,  39,  38, 138,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 116, 114, 105,  98, 117,
    116, 101, 100, 101, 115, 116, 105, 109,
     97, 116, 111, 114,  46,  99,  97, 112,
    110, 112,  58,  83, 101, 110, 115, 111,
    114,  81, 117, 101, 114, 121,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    109, 115, 103,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_95f964b901abb23e = b_95f964b901abb23e.words;
#if !CAPNP_LITE
static const uint16_t m_95f964b901abb23e[] = {0};
static const uint16_t i_95f964b901abb23e[] = {0};
const ::capnp::_::RawSchema s_95f964b901abb23e = {
  0x95f964b901abb23e, b_95f964b901abb23e.words, 34, nullptr, m_95f964b901abb23e,
  0, 1, i_95f964b901abb23e, nullptr, nullptr, { &s_95f964b901abb23e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace distributedestimator {
namespace messages {

// Estimate
constexpr uint16_t Estimate::_capnpPrivate::dataWordSize;
constexpr uint16_t Estimate::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Estimate::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Estimate::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// SensorValue
constexpr uint16_t SensorValue::_capnpPrivate::dataWordSize;
constexpr uint16_t SensorValue::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SensorValue::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SensorValue::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// SensorReady
constexpr uint16_t SensorReady::_capnpPrivate::dataWordSize;
constexpr uint16_t SensorReady::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SensorReady::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SensorReady::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// SensorQuery
constexpr uint16_t SensorQuery::_capnpPrivate::dataWordSize;
constexpr uint16_t SensorQuery::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SensorQuery::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SensorQuery::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace
