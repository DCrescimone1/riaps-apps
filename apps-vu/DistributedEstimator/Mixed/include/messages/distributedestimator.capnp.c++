// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: distributedestimator.capnp

#include "distributedestimator.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<34> b_cfcd177688fd9ffb = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    251, 159, 253, 136, 118,  23, 205, 207,
     27,   0,   0,   0,   1,   0,   0,   0,
    108, 233, 111,  68, 137,  41,  47, 185,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 116, 114, 105,  98, 117,
    116, 101, 100, 101, 115, 116, 105, 109,
     97, 116, 111, 114,  46,  99,  97, 112,
    110, 112,  58,  83, 101, 110, 115, 111,
    114,  82, 101,  97, 100, 121,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    109, 115, 103,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cfcd177688fd9ffb = b_cfcd177688fd9ffb.words;
#if !CAPNP_LITE
static const uint16_t m_cfcd177688fd9ffb[] = {0};
static const uint16_t i_cfcd177688fd9ffb[] = {0};
const ::capnp::_::RawSchema s_cfcd177688fd9ffb = {
  0xcfcd177688fd9ffb, b_cfcd177688fd9ffb.words, 34, nullptr, m_cfcd177688fd9ffb,
  0, 1, i_cfcd177688fd9ffb, nullptr, nullptr, { &s_cfcd177688fd9ffb, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_ec79c770f72e15f8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    248,  21,  46, 247, 112, 199, 121, 236,
     27,   0,   0,   0,   1,   0,   0,   0,
    108, 233, 111,  68, 137,  41,  47, 185,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 116, 114, 105,  98, 117,
    116, 101, 100, 101, 115, 116, 105, 109,
     97, 116, 111, 114,  46,  99,  97, 112,
    110, 112,  58,  83, 101, 110, 115, 111,
    114,  81, 117, 101, 114, 121,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    109, 115, 103,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ec79c770f72e15f8 = b_ec79c770f72e15f8.words;
#if !CAPNP_LITE
static const uint16_t m_ec79c770f72e15f8[] = {0};
static const uint16_t i_ec79c770f72e15f8[] = {0};
const ::capnp::_::RawSchema s_ec79c770f72e15f8 = {
  0xec79c770f72e15f8, b_ec79c770f72e15f8.words, 34, nullptr, m_ec79c770f72e15f8,
  0, 1, i_ec79c770f72e15f8, nullptr, nullptr, { &s_ec79c770f72e15f8, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_ea98fb964af3dd1e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     30, 221, 243,  74, 150, 251, 152, 234,
     27,   0,   0,   0,   1,   0,   0,   0,
    108, 233, 111,  68, 137,  41,  47, 185,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 116, 114, 105,  98, 117,
    116, 101, 100, 101, 115, 116, 105, 109,
     97, 116, 111, 114,  46,  99,  97, 112,
    110, 112,  58,  83, 101, 110, 115, 111,
    114,  86,  97, 108, 117, 101,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    109, 115, 103,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ea98fb964af3dd1e = b_ea98fb964af3dd1e.words;
#if !CAPNP_LITE
static const uint16_t m_ea98fb964af3dd1e[] = {0};
static const uint16_t i_ea98fb964af3dd1e[] = {0};
const ::capnp::_::RawSchema s_ea98fb964af3dd1e = {
  0xea98fb964af3dd1e, b_ea98fb964af3dd1e.words, 34, nullptr, m_ea98fb964af3dd1e,
  0, 1, i_ea98fb964af3dd1e, nullptr, nullptr, { &s_ea98fb964af3dd1e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_de7d7c67c7f762a2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    162,  98, 247, 199, 103, 124, 125, 222,
     27,   0,   0,   0,   1,   0,   0,   0,
    108, 233, 111,  68, 137,  41,  47, 185,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 116, 114, 105,  98, 117,
    116, 101, 100, 101, 115, 116, 105, 109,
     97, 116, 111, 114,  46,  99,  97, 112,
    110, 112,  58,  69, 115, 116, 105, 109,
     97, 116, 101,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    109, 115, 103,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_de7d7c67c7f762a2 = b_de7d7c67c7f762a2.words;
#if !CAPNP_LITE
static const uint16_t m_de7d7c67c7f762a2[] = {0};
static const uint16_t i_de7d7c67c7f762a2[] = {0};
const ::capnp::_::RawSchema s_de7d7c67c7f762a2 = {
  0xde7d7c67c7f762a2, b_de7d7c67c7f762a2.words, 34, nullptr, m_de7d7c67c7f762a2,
  0, 1, i_de7d7c67c7f762a2, nullptr, nullptr, { &s_de7d7c67c7f762a2, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace distributedestimator {
namespace messages {

// SensorReady
constexpr uint16_t SensorReady::_capnpPrivate::dataWordSize;
constexpr uint16_t SensorReady::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SensorReady::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SensorReady::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// SensorQuery
constexpr uint16_t SensorQuery::_capnpPrivate::dataWordSize;
constexpr uint16_t SensorQuery::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SensorQuery::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SensorQuery::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// SensorValue
constexpr uint16_t SensorValue::_capnpPrivate::dataWordSize;
constexpr uint16_t SensorValue::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SensorValue::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SensorValue::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Estimate
constexpr uint16_t Estimate::_capnpPrivate::dataWordSize;
constexpr uint16_t Estimate::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Estimate::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Estimate::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

