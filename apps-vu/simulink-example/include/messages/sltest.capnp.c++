// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: sltest.capnp

#include "sltest.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<33> b_91fe3e39eb086426 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     38, 100,   8, 235,  57,  62, 254, 145,
     13,   0,   0,   0,   1,   0,   1,   0,
    209, 236,  14, 191, 103, 246,  85, 138,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 108, 116, 101, 115, 116,  46,  99,
     97, 112, 110, 112,  58,  80, 111, 115,
    105, 116, 105, 111, 110,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     24,   0,   0,   0,   2,   0,   1,   0,
    112, 111, 115, 105, 116, 105, 111, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_91fe3e39eb086426 = b_91fe3e39eb086426.words;
#if !CAPNP_LITE
static const uint16_t m_91fe3e39eb086426[] = {0};
static const uint16_t i_91fe3e39eb086426[] = {0};
const ::capnp::_::RawSchema s_91fe3e39eb086426 = {
  0x91fe3e39eb086426, b_91fe3e39eb086426.words, 33, nullptr, m_91fe3e39eb086426,
  0, 1, i_91fe3e39eb086426, nullptr, nullptr, { &s_91fe3e39eb086426, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<32> b_a6ee42058f741a51 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     81,  26, 116, 143,   5,  66, 238, 166,
     13,   0,   0,   0,   1,   0,   1,   0,
    209, 236,  14, 191, 103, 246,  85, 138,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 108, 116, 101, 115, 116,  46,  99,
     97, 112, 110, 112,  58,  70, 111, 114,
     99, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    102, 111, 114,  99, 101,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a6ee42058f741a51 = b_a6ee42058f741a51.words;
#if !CAPNP_LITE
static const uint16_t m_a6ee42058f741a51[] = {0};
static const uint16_t i_a6ee42058f741a51[] = {0};
const ::capnp::_::RawSchema s_a6ee42058f741a51 = {
  0xa6ee42058f741a51, b_a6ee42058f741a51.words, 32, nullptr, m_a6ee42058f741a51,
  0, 1, i_a6ee42058f741a51, nullptr, nullptr, { &s_a6ee42058f741a51, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace sltest {
namespace messages {

// Position
constexpr uint16_t Position::_capnpPrivate::dataWordSize;
constexpr uint16_t Position::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Position::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Position::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Force
constexpr uint16_t Force::_capnpPrivate::dataWordSize;
constexpr uint16_t Force::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Force::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Force::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

