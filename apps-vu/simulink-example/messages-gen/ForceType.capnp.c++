// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: ForceType.capnp

#include "ForceType.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<39> b_c1653f4cfdff0dd7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    215,  13, 255, 253,  76,  63, 101, 193,
     68,   0,   0,   0,   1,   0,   1,   0,
    100, 109,  98,  16, 218,  70,   5, 202,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   2,   0,   0,
     57,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     47, 104, 111, 109, 101,  47, 112,  97,
    114,  97, 108, 108, 101, 108, 115,  47,
    119, 111, 114, 107,  47, 114, 105,  97,
    112, 115,  45,  97, 112, 112, 115,  47,
    115, 108, 116, 101, 115, 116,  47, 109,
    101, 115, 115,  97, 103, 101, 115,  45,
    103, 101, 110,  47,  70, 111, 114,  99,
    101,  84, 121, 112, 101,  46,  99,  97,
    112, 110, 112,  58,  70, 111, 114,  99,
    101,  84, 121, 112, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c1653f4cfdff0dd7 = b_c1653f4cfdff0dd7.words;
#if !CAPNP_LITE
static const uint16_t m_c1653f4cfdff0dd7[] = {0};
static const uint16_t i_c1653f4cfdff0dd7[] = {0};
const ::capnp::_::RawSchema s_c1653f4cfdff0dd7 = {
  0xc1653f4cfdff0dd7, b_c1653f4cfdff0dd7.words, 39, nullptr, m_c1653f4cfdff0dd7,
  0, 1, i_c1653f4cfdff0dd7, nullptr, nullptr, { &s_c1653f4cfdff0dd7, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// ForceType
#ifndef _MSC_VER
constexpr uint16_t ForceType::_capnpPrivate::dataWordSize;
constexpr uint16_t ForceType::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind ForceType::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ForceType::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ForceType::_capnpPrivate::brand;
#endif  // !CAPNP_LITE



