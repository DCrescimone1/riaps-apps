//
// Auto-generated by edu.vanderbilt.riaps.generator.ComponenetGenerator.xtend
//
#include <ActuatorBase.h>

namespace sltest {
   namespace components {
      
      ActuatorBase::ActuatorBase(_component_conf &config, riaps::Actor &actor) : ComponentBase(config, actor) {
         
      }
      
      void ActuatorBase::DispatchMessage(capnp::FlatArrayMessageReader* capnpreader, riaps::ports::PortBase *port,std::shared_ptr<riaps::MessageParams> params) {
         auto portName = port->GetPortName();
         if (portName == PORT_SUB_FORCE) {
            ForceType::Reader Force =
            capnpreader->getRoot<ForceType>();
            OnForce(Force, port);
         }
         
      }
      
      void ActuatorBase::DispatchInsideMessage(zmsg_t* zmsg, riaps::ports::PortBase* port) {
         //empty the header
      }
      
      
      ActuatorBase::~ActuatorBase() {
         
      }
   }
}
